{"ast":null,"code":"const components = require('../components.js');\nconst getLoader = require('../dependencies');\n\n/**\n * The set of all languages which have been loaded using the below function.\n *\n * @type {Set<string>}\n */\nconst loadedLanguages = new Set();\n\n/**\n * Loads the given languages and adds them to the current Prism instance.\n *\n * If no languages are provided, __all__ Prism languages will be loaded.\n *\n * @param {string|string[]} [languages]\n * @returns {void}\n */\nfunction loadLanguages(languages) {\n  if (languages === undefined) {\n    languages = Object.keys(components.languages).filter(l => l != 'meta');\n  } else if (!Array.isArray(languages)) {\n    languages = [languages];\n  }\n\n  // the user might have loaded languages via some other way or used `prism.js` which already includes some\n  // we don't need to validate the ids because `getLoader` will ignore invalid ones\n  const loaded = [...loadedLanguages, ...Object.keys(Prism.languages)];\n  getLoader(components, languages, loaded).load(lang => {\n    if (!(lang in components.languages)) {\n      if (!loadLanguages.silent) {\n        console.warn('Language does not exist: ' + lang);\n      }\n      return;\n    }\n    const pathToLanguage = './prism-' + lang;\n\n    // remove from require cache and from Prism\n    delete require.cache[require.resolve(pathToLanguage)];\n    delete Prism.languages[lang];\n    require(pathToLanguage);\n    loadedLanguages.add(lang);\n  });\n}\n\n/**\n * Set this to `true` to prevent all warning messages `loadLanguages` logs.\n */\nloadLanguages.silent = false;\nmodule.exports = loadLanguages;","map":{"version":3,"names":["components","require","getLoader","loadedLanguages","Set","loadLanguages","languages","undefined","Object","keys","filter","l","Array","isArray","loaded","Prism","load","lang","silent","console","warn","pathToLanguage","cache","resolve","add","module","exports"],"sources":["C:/Projetos/apl-web-study-sphere/node_modules/prismjs/components/index.js"],"sourcesContent":["const components = require('../components.js');\nconst getLoader = require('../dependencies');\n\n\n/**\n * The set of all languages which have been loaded using the below function.\n *\n * @type {Set<string>}\n */\nconst loadedLanguages = new Set();\n\n/**\n * Loads the given languages and adds them to the current Prism instance.\n *\n * If no languages are provided, __all__ Prism languages will be loaded.\n *\n * @param {string|string[]} [languages]\n * @returns {void}\n */\nfunction loadLanguages(languages) {\n\tif (languages === undefined) {\n\t\tlanguages = Object.keys(components.languages).filter(l => l != 'meta');\n\t} else if (!Array.isArray(languages)) {\n\t\tlanguages = [languages];\n\t}\n\n\t// the user might have loaded languages via some other way or used `prism.js` which already includes some\n\t// we don't need to validate the ids because `getLoader` will ignore invalid ones\n\tconst loaded = [...loadedLanguages, ...Object.keys(Prism.languages)];\n\n\tgetLoader(components, languages, loaded).load(lang => {\n\t\tif (!(lang in components.languages)) {\n\t\t\tif (!loadLanguages.silent) {\n\t\t\t\tconsole.warn('Language does not exist: ' + lang);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tconst pathToLanguage = './prism-' + lang;\n\n\t\t// remove from require cache and from Prism\n\t\tdelete require.cache[require.resolve(pathToLanguage)];\n\t\tdelete Prism.languages[lang];\n\n\t\trequire(pathToLanguage);\n\n\t\tloadedLanguages.add(lang);\n\t});\n}\n\n/**\n * Set this to `true` to prevent all warning messages `loadLanguages` logs.\n */\nloadLanguages.silent = false;\n\nmodule.exports = loadLanguages;\n"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC9C,MAAMC,SAAS,GAAGD,OAAO,CAAC,iBAAiB,CAAC;;AAG5C;AACA;AACA;AACA;AACA;AACA,MAAME,eAAe,GAAG,IAAIC,GAAG,EAAE;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,aAAaA,CAACC,SAAS,EAAE;EACjC,IAAIA,SAAS,KAAKC,SAAS,EAAE;IAC5BD,SAAS,GAAGE,MAAM,CAACC,IAAI,CAACT,UAAU,CAACM,SAAS,CAAC,CAACI,MAAM,CAACC,CAAC,IAAIA,CAAC,IAAI,MAAM,CAAC;EACvE,CAAC,MAAM,IAAI,CAACC,KAAK,CAACC,OAAO,CAACP,SAAS,CAAC,EAAE;IACrCA,SAAS,GAAG,CAACA,SAAS,CAAC;EACxB;;EAEA;EACA;EACA,MAAMQ,MAAM,GAAG,CAAC,GAAGX,eAAe,EAAE,GAAGK,MAAM,CAACC,IAAI,CAACM,KAAK,CAACT,SAAS,CAAC,CAAC;EAEpEJ,SAAS,CAACF,UAAU,EAAEM,SAAS,EAAEQ,MAAM,CAAC,CAACE,IAAI,CAACC,IAAI,IAAI;IACrD,IAAI,EAAEA,IAAI,IAAIjB,UAAU,CAACM,SAAS,CAAC,EAAE;MACpC,IAAI,CAACD,aAAa,CAACa,MAAM,EAAE;QAC1BC,OAAO,CAACC,IAAI,CAAC,2BAA2B,GAAGH,IAAI,CAAC;MACjD;MACA;IACD;IAEA,MAAMI,cAAc,GAAG,UAAU,GAAGJ,IAAI;;IAExC;IACA,OAAOhB,OAAO,CAACqB,KAAK,CAACrB,OAAO,CAACsB,OAAO,CAACF,cAAc,CAAC,CAAC;IACrD,OAAON,KAAK,CAACT,SAAS,CAACW,IAAI,CAAC;IAE5BhB,OAAO,CAACoB,cAAc,CAAC;IAEvBlB,eAAe,CAACqB,GAAG,CAACP,IAAI,CAAC;EAC1B,CAAC,CAAC;AACH;;AAEA;AACA;AACA;AACAZ,aAAa,CAACa,MAAM,GAAG,KAAK;AAE5BO,MAAM,CAACC,OAAO,GAAGrB,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}