{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet LandingComponent = class LandingComponent {\n  constructor(router, loginService, highlightService) {\n    this.router = router;\n    this.loginService = loginService;\n    this.highlightService = highlightService;\n    this.htmlContent = `<pre>\n    <code class=\\\"language-typescript\\\">import { Injectable, Inject } from '@angular/core';\\n\\nimport { PLATFORM_ID } from '@angular/core';\\nimport { isPlatformBrowser } from '@angular/common';\\n\\nimport 'clipboard';\\n\\nimport 'prismjs';\\nimport 'prismjs/plugins/toolbar/prism-toolbar';\\nimport 'prismjs/plugins/copy-to-clipboard/prism-copy-to-clipboard';\\nimport 'prismjs/components/prism-css';\\nimport 'prismjs/components/prism-javascript';\\nimport 'prismjs/components/prism-java';\\nimport 'prismjs/components/prism-markup';\\nimport 'prismjs/components/prism-typescript';\\nimport 'prismjs/components/prism-sass';\\nimport 'prismjs/components/prism-scss';\\n\\ndeclare var Prism: any;\\n\\n@Injectable()\\nexport class HighlightService {\\n\\n  constructor(@Inject(PLATFORM_ID) private platformId: Object) { }\\n\\n  highlightAll() {\\n    if (isPlatformBrowser(this.platformId)) {\\n      Prism.highlightAll();\\n    }\\n  }\\n}\\n\n    </code>\n  </pre>`;\n  }\n  ngOnInit() {\n    if (this.loginService.isLoggedIn()) {\n      this.router.navigate(['/home']);\n    }\n  }\n  ngAfterViewChecked() {\n    this.highlightService.highlightAll();\n  }\n};\nLandingComponent = __decorate([Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.css']\n})], LandingComponent);\nexport { LandingComponent };","map":{"version":3,"names":["Component","LandingComponent","constructor","router","loginService","highlightService","htmlContent","ngOnInit","isLoggedIn","navigate","ngAfterViewChecked","highlightAll","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Projetos\\apl-web-study-sphere\\src\\app\\landing\\landing.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from '../shared/services/login.service';\r\nimport { Router } from '@angular/router';\r\nimport { HighlightService } from '../shared/services/highlight.service';\r\n\r\n@Component({\r\n  selector: 'app-landing',\r\n  templateUrl: './landing.component.html',\r\n  styleUrls: ['./landing.component.css']\r\n})\r\nexport class LandingComponent implements OnInit {\r\n  \r\n  htmlContent: string = `<pre>\r\n    <code class=\\\"language-typescript\\\">import { Injectable, Inject } from '@angular/core';\\n\\nimport { PLATFORM_ID } from '@angular/core';\\nimport { isPlatformBrowser } from '@angular/common';\\n\\nimport 'clipboard';\\n\\nimport 'prismjs';\\nimport 'prismjs/plugins/toolbar/prism-toolbar';\\nimport 'prismjs/plugins/copy-to-clipboard/prism-copy-to-clipboard';\\nimport 'prismjs/components/prism-css';\\nimport 'prismjs/components/prism-javascript';\\nimport 'prismjs/components/prism-java';\\nimport 'prismjs/components/prism-markup';\\nimport 'prismjs/components/prism-typescript';\\nimport 'prismjs/components/prism-sass';\\nimport 'prismjs/components/prism-scss';\\n\\ndeclare var Prism: any;\\n\\n@Injectable()\\nexport class HighlightService {\\n\\n  constructor(@Inject(PLATFORM_ID) private platformId: Object) { }\\n\\n  highlightAll() {\\n    if (isPlatformBrowser(this.platformId)) {\\n      Prism.highlightAll();\\n    }\\n  }\\n}\\n\r\n    </code>\r\n  </pre>`;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private loginService: LoginService,\r\n    private highlightService: HighlightService\r\n  ){}\r\n  \r\n  ngOnInit(): void {\r\n    if(this.loginService.isLoggedIn()){\r\n      this.router.navigate(['/home']);\r\n    }\r\n  }\r\n  \r\n  ngAfterViewChecked(){\r\n    this.highlightService.highlightAll();\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAUjD,IAAaC,gBAAgB,GAA7B,MAAaA,gBAAgB;EAO3BC,YACUC,MAAc,EACdC,YAA0B,EAC1BC,gBAAkC;IAFlC,KAAAF,MAAM,GAANA,MAAM;IACN,KAAAC,YAAY,GAAZA,YAAY;IACZ,KAAAC,gBAAgB,GAAhBA,gBAAgB;IAR1B,KAAAC,WAAW,GAAW;;;SAGf;EAML;EAEFC,QAAQA,CAAA;IACN,IAAG,IAAI,CAACH,YAAY,CAACI,UAAU,EAAE,EAAC;MAChC,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;;EAEnC;EAEAC,kBAAkBA,CAAA;IAChB,IAAI,CAACL,gBAAgB,CAACM,YAAY,EAAE;EACtC;CACD;AAtBYV,gBAAgB,GAAAW,UAAA,EAL5BZ,SAAS,CAAC;EACTa,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACWd,gBAAgB,CAsB5B;SAtBYA,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}