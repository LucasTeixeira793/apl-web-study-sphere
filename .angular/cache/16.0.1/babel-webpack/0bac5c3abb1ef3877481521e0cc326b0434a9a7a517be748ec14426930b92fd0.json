{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, HostListener } from '@angular/core';\nlet NavbarLoggedInComponent = class NavbarLoggedInComponent {\n  constructor(elementRef, loginService, router) {\n    this.elementRef = elementRef;\n    this.loginService = loginService;\n    this.router = router;\n    // Dropdown\n    this.isDropdownOpen = false;\n    this.isDropdownAnimated = false;\n  }\n  logout() {\n    this.loginService.logout();\n    this.router.navigate(['/']);\n  }\n  toggleDropdown() {\n    this.isDropdownOpen = !this.isDropdownOpen;\n    this.isDropdownAnimated = true;\n  }\n  closeDropdown() {\n    this.isDropdownOpen = false;\n    this.isDropdownAnimated = false;\n  }\n  onDocumentClick(event) {\n    // Verifica se o clique ocorreu dentro do dropdown\n    if (!this.elementRef.nativeElement.contains(event.target)) {\n      this.isDropdownOpen = false;\n      this.isDropdownAnimated = false;\n    }\n  }\n};\n__decorate([HostListener('document:click', ['$event'])], NavbarLoggedInComponent.prototype, \"onDocumentClick\", null);\nNavbarLoggedInComponent = __decorate([Component({\n  selector: 'app-navbar-logged-in',\n  templateUrl: './navbar-logged-in.component.html',\n  styleUrls: ['./navbar-logged-in.component.css']\n})], NavbarLoggedInComponent);\nexport { NavbarLoggedInComponent };","map":{"version":3,"names":["Component","HostListener","NavbarLoggedInComponent","constructor","elementRef","loginService","router","isDropdownOpen","isDropdownAnimated","logout","navigate","toggleDropdown","closeDropdown","onDocumentClick","event","nativeElement","contains","target","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Projetos\\apl-web-study-sphere\\src\\app\\shared\\navbar\\navbar-logged-in\\navbar-logged-in.component.ts"],"sourcesContent":["import { Component, ElementRef, HostListener, OnInit } from '@angular/core';\nimport { LoginService } from '../../services/login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar-logged-in',\n  templateUrl: './navbar-logged-in.component.html',\n  styleUrls: ['./navbar-logged-in.component.css']\n})\nexport class NavbarLoggedInComponent {\n\n  constructor(\n    private elementRef: ElementRef,\n    private loginService: LoginService,\n    private router: Router\n  ){}\n\n  logout(){\n    this.loginService.logout();\n    this.router.navigate(['/']);\n  }\n\n  // Dropdown\n  isDropdownOpen: boolean = false;\n  isDropdownAnimated: boolean = false;\n  toggleDropdown() {\n    this.isDropdownOpen = !this.isDropdownOpen;\n    this.isDropdownAnimated = true;\n  }\n\n  closeDropdown() {\n    this.isDropdownOpen = false;\n    this.isDropdownAnimated = false;\n  }\n\n  @HostListener('document:click', ['$event'])\n  onDocumentClick(event: MouseEvent) {\n    // Verifica se o clique ocorreu dentro do dropdown\n    if (!this.elementRef.nativeElement.contains(event.target)) {\n      this.isDropdownOpen = false;\n      this.isDropdownAnimated = false;\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAcC,YAAY,QAAgB,eAAe;AAS3E,IAAaC,uBAAuB,GAApC,MAAaA,uBAAuB;EAElCC,YACUC,UAAsB,EACtBC,YAA0B,EAC1BC,MAAc;IAFd,KAAAF,UAAU,GAAVA,UAAU;IACV,KAAAC,YAAY,GAAZA,YAAY;IACZ,KAAAC,MAAM,GAANA,MAAM;IAQhB;IACA,KAAAC,cAAc,GAAY,KAAK;IAC/B,KAAAC,kBAAkB,GAAY,KAAK;EATjC;EAEFC,MAAMA,CAAA;IACJ,IAAI,CAACJ,YAAY,CAACI,MAAM,EAAE;IAC1B,IAAI,CAACH,MAAM,CAACI,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EAC7B;EAKAC,cAAcA,CAAA;IACZ,IAAI,CAACJ,cAAc,GAAG,CAAC,IAAI,CAACA,cAAc;IAC1C,IAAI,CAACC,kBAAkB,GAAG,IAAI;EAChC;EAEAI,aAAaA,CAAA;IACX,IAAI,CAACL,cAAc,GAAG,KAAK;IAC3B,IAAI,CAACC,kBAAkB,GAAG,KAAK;EACjC;EAGAK,eAAeA,CAACC,KAAiB;IAC/B;IACA,IAAI,CAAC,IAAI,CAACV,UAAU,CAACW,aAAa,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,EAAE;MACzD,IAAI,CAACV,cAAc,GAAG,KAAK;MAC3B,IAAI,CAACC,kBAAkB,GAAG,KAAK;;EAEnC;CACD;AAPCU,UAAA,EADCjB,YAAY,CAAC,gBAAgB,EAAE,CAAC,QAAQ,CAAC,CAAC,C,6DAO1C;AAjCUC,uBAAuB,GAAAgB,UAAA,EALnClB,SAAS,CAAC;EACTmB,QAAQ,EAAE,sBAAsB;EAChCC,WAAW,EAAE,mCAAmC;EAChDC,SAAS,EAAE,CAAC,kCAAkC;CAC/C,CAAC,C,EACWnB,uBAAuB,CAkCnC;SAlCYA,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}